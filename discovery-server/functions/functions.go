package util

import (
	"fmt"
	"log"

	v1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/api/resource"
)

var clusterList = []Cluster{
	{
		Name:       "remote",
		Kubeconfig: "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRsUnJlazFFVlhsUFJHZDNTR2hqVGsxcVZYaE5SRUY0VFVSak1VNUVVVFJYYUdOT1RYcFZkMDlVU1RWTlJHTXhUa1JSTkFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUbFJyZWsxRVZYbFBSR2QzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZVT0VOR1lWRkdVMGhzTUhoNE5VcENlR05JUWs1b1VGTkhPWEU1VldOa1dVeFhORGx5V2xFeFZWa0tTalZyU0RGVGFWbEJUVzFNZEU1MEwydHZLMDlJVGtOTVpWQjRlbXBHZEM5ME1FdHFiSEJVTHpoME5VUnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWUzlaTWxGV2RuTm5lVUpSYVd4V2JtbENSVzlQQ25wRmNVRmlialIzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG9RVXRNTDJkSlQxTkZUMUZXVjFWSWNXcG1SMmszY0U1dVJIRkVaelkyUkdrS1VIWlFZbVEwV1RkNGJVMVBRV2xCZFVGYVZreElZMnR5WWxad1NHaGpWa0pUVkZVdlMyVmFiRGRxY1dSek4zZFNSMGMxZFRKbFJteDJRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMTkyLjE2OC4xMS44Mzo2NDQzCiAgbmFtZTogZGVmYXVsdApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogZGVmYXVsdAogICAgdXNlcjogZGVmYXVsdAogIG5hbWU6IGRlZmF1bHQKY3VycmVudC1jb250ZXh0OiBkZWZhdWx0CmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogZGVmYXVsdAogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSnJha05EUVZSbFowRjNTVUpCWjBsSlkxWjJWWE5KWkRWWllWVjNRMmRaU1V0dldrbDZhakJGUVhkSmQwbDZSV2hOUWpoSFFURlZSVUYzZDFrS1lYcE9la3hYVG5OaFYxWjFaRU14YWxsVlFYaE9lbFUxVFhwQk1VMXFaelJOUWpSWVJGUkpNVTFVUVhkTlZFRXpUbFJSTUU5R2IxaEVWRWt5VFZSQmR3cE5WRUV6VGxSUk1FOUdiM2ROUkVWWVRVSlZSMEV4VlVWRGFFMVBZek5zZW1SSFZuUlBiVEZvWXpOU2JHTnVUWGhHVkVGVVFtZE9Wa0pCVFZSRVNFNDFDbU16VW14aVZIQm9Xa2N4Y0dKcVFscE5RazFIUW5seFIxTk5ORGxCWjBWSFEwTnhSMU5OTkRsQmQwVklRVEJKUVVKRlRWaHRWazgzU1RJeGFVNHlOVklLZWpSTlRXOHJiMmhQV0hRM1kxVllUM1p2UTBwU2RGRkVVMmxSVGtZM2NXSlJkbTlPV21WQ2J6QlFkVFl4Y2xKU2NqUXJiVEZCYVZGd1drUTJiMEpEYWdwUVQzcEJXR1poYWxORVFrZE5RVFJIUVRGVlpFUjNSVUl2ZDFGRlFYZEpSbTlFUVZSQ1owNVdTRk5WUlVSRVFVdENaMmR5UW1kRlJrSlJZMFJCYWtGbUNrSm5UbFpJVTAxRlIwUkJWMmRDVkRSRmIwTkZkR1FyWW1aVVlrOXNkVTlzVDNBeGRVSjBMM1pUYWtGTFFtZG5jV2hyYWs5UVVWRkVRV2RPU2tGRVFrY0tRV2xGUVRkR05rWlhjMWxtZEM4eWREbGxObmxSVTBwRmJXTldLMFF3Ym14TFkyMW1VM1JLZFdwTE5WRk9Na2xEU1ZGRU1DOWFRMjF5V1VKblJGZFBVUXB2T0dobmMwRnRUbGRwVEdGck56TmtOSFZEY1hSa1VETjFiMEZsZDNjOVBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENpMHRMUzB0UWtWSFNVNGdRMFZTVkVsR1NVTkJWRVV0TFMwdExRcE5TVWxDWlVSRFEwRlNNbWRCZDBsQ1FXZEpRa0ZFUVV0Q1oyZHhhR3RxVDFCUlVVUkJha0ZxVFZORmQwaDNXVVJXVVZGRVJFSm9jazB6VFhSWk1uaHdDbHBYTlRCTVYwNW9VVVJGTTA1VWEzcE5SRlY1VDBSbmQwaG9ZMDVOYWxWNFRVUkJlRTFFWXpGT1JGRTBWMmhqVGsxNlZYZFBWRWsxVFVSak1VNUVVVFFLVjJwQmFrMVRSWGRJZDFsRVZsRlJSRVJDYUhKTk0wMTBXVEo0Y0ZwWE5UQk1WMDVvVVVSRk0wNVVhM3BOUkZWNVQwUm5kMWRVUVZSQ1oyTnhhR3RxVHdwUVVVbENRbWRuY1docmFrOVFVVTFDUW5kT1EwRkJVVE51YnpFek0wOVljbVlyTm5NeVNHSTNSa2x3YWxBcmVYZE9RVXczYm5odU5FWnRaeXQ0UVVSakNqVlBUVzhyY1VwaVptcDNZWEkyTTFaaFZuRllaVkZTTVRaRUsxcDJOVVV4UzIxQmJYQmxkRkZuVUhkWWJ6QkpkMUZFUVU5Q1owNVdTRkU0UWtGbU9FVUtRa0ZOUTBGeFVYZEVkMWxFVmxJd1ZFRlJTQzlDUVZWM1FYZEZRaTk2UVdSQ1owNVdTRkUwUlVablVWVXJRa3RCYUV4WVptMHpNREo2Y0dKcWNGUnhaQXBpWjJKbU56QnZkME5uV1VsTGIxcEplbW93UlVGM1NVUlRVVUYzVW1kSmFFRlFNV0pwUkM5VE4yOW5SbTlLV0hWVVowcHpWVUozU1U1MU1XZzJhV2xxQ2toQ1pXb3dVblpLYTNCak1VRnBSVUZ3WWpaTlNFdDVla1p4WlhwdmVteDVVRlZwUlZaTUx5ODNPVEZGUjJkeWNHMHZha3gwZFZOb2EyZFpQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQkZReUJRVWtsV1FWUkZJRXRGV1MwdExTMHRDazFJWTBOQlVVVkZTVVZSVTJsbWFubDZlVEY0ZWtkM01EUk9hRXN3VEhwa1FqbHZRWE5FY2xRNVVXeHJjRXhYZW1oaU1HSnZRVzlIUTBOeFIxTk5ORGtLUVhkRlNHOVZVVVJSWjBGRlVYaGxXbFUzYzJwaVYwa3pZbXhJVUdkM2VXbzJhVVUxWlROMGVGSmpOaXRuU1d4SE1VRk9TMHBCTUZoMWNIUkRLMmN4YkFvMFIycFJLemR5VjNSR1IzWnFObUpWUTBwRGJHdFFjV2RGUzAwNE4wMUNaRGxuUFQwS0xTMHRMUzFGVGtRZ1JVTWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K",
		Resources: v1.ResourceList{
			v1.ResourceCPU:    *resource.NewQuantity(5, resource.DecimalSI),
			v1.ResourceMemory: *resource.NewQuantity(4*1024*1024*1024, resource.BinarySI),
			v1.ResourcePods:   *resource.NewQuantity(100, resource.DecimalSI),
			"nvidia.com/gpu":  *resource.NewQuantity(1, resource.DecimalSI),
		},
		Labels: map[string]string{
			"country":  "france",
			"provider": "liqo",
			"city":     "paris",
			"hasGPU":   "true",
		},
		HasNat: false,
	},
	{
		Name:       "remote2",
		Kubeconfig: "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRsUnJNRTFxVlRGUFZGbDNTR2hqVGsxcVZYaE5SRUY1VFZSamVFOVVWVEpYYUdOT1RYcFZkMDlVVFhkTlZHTjRUMVJWTWdwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUbFJyTUUxcVZURlBWRmwzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZVYW10MVdrWk1lWEpYWjBKUk0wNUJWa3BaYlhFeGJtTnJOMkpGT0RCVFEwb3lTMkZWTURaTVVWTUtlbEJVYTB3MFVHSXlOM1JpVlU4MlZXVjVVVzFTWVVSbWNFdHpTVFZYT1drd1FVc3lhV2xWVGpSYWFtdHZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3A1WmpCYVdrOXhTVk54UmtaRFVtb3liVEJ1Q2xBdldrTjJObXQzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5TRnBFYkhGSFRFNVhTVE01ZDAxbWRqVjJTa3haWjNaRWNFWjViMUZvSzBVS09UWlRURTU2YzJJM1JHOURTVkZEZDAwcmIwSnhla2xPYUhCb2JTdGxRM3BQV2k5bVpFMHJXREJPVkcxd2FGQk1WVU13TVdnd1ZHUnNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMTkyLjE2OC4xMS44NDo2NDQzCiAgbmFtZTogZGVmYXVsdApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogZGVmYXVsdAogICAgdXNlcjogZGVmYXVsdAogIG5hbWU6IGRlZmF1bHQKY3VycmVudC1jb250ZXh0OiBkZWZhdWx0CmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogZGVmYXVsdAogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSnJWRU5EUVZSbFowRjNTVUpCWjBsSlRYSnJUMUZEU2l0bFJqQjNRMmRaU1V0dldrbDZhakJGUVhkSmQwbDZSV2hOUWpoSFFURlZSVUYzZDFrS1lYcE9la3hYVG5OaFYxWjFaRU14YWxsVlFYaE9lbFUxVGtSSk1VNVVhekpOUWpSWVJGUkpNVTFVUVhkTmFrVXpUVlJyTVU1c2IxaEVWRWt5VFZSQmR3cE5ha1V6VFZSck1VNXNiM2ROUkVWWVRVSlZSMEV4VlVWRGFFMVBZek5zZW1SSFZuUlBiVEZvWXpOU2JHTnVUWGhHVkVGVVFtZE9Wa0pCVFZSRVNFNDFDbU16VW14aVZIQm9Xa2N4Y0dKcVFscE5RazFIUW5seFIxTk5ORGxCWjBWSFEwTnhSMU5OTkRsQmQwVklRVEJKUVVKRWRrOUNaVXRYYkdSemVteDNZaXNLYUdzMlRuSnhUV0l5TTJKMGIzVllZWEpsTVhGRlRsaExjVGx5ZFdOTEwxWjNZemxpVEc1b2JHcExTR3BEVkU5SGVHZDFVR2c0ZDFWVVZra3pTVlZ6TkFwUlRVVnFaMjkxYWxORVFrZE5RVFJIUVRGVlpFUjNSVUl2ZDFGRlFYZEpSbTlFUVZSQ1owNVdTRk5WUlVSRVFVdENaMmR5UW1kRlJrSlJZMFJCYWtGbUNrSm5UbFpJVTAxRlIwUkJWMmRDVXpBelQxSnBlbU50V21walMzWlRhbmcxT1RsbGRtSTBLMjFJYWtGTFFtZG5jV2hyYWs5UVVWRkVRV2RPU1VGRVFrWUtRV2xCVWxOelVqZDJkbEZ2YVUwMGJtcEpSaTltY3prd1MxRnJLMGxZZUZsaFoyNVFRbkV5V25sclUxQlRVVWxvUVU0NGFVMVlSbkF3Y3poV2EyVkZiQXBhVW1Gb1VHVXZSM2xuYlZRM1UzTkZjVlpXY0hGWmVtWmljSEZwQ2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSmxSRU5EUVZJeVowRjNTVUpCWjBsQ1FVUkJTMEpuWjNGb2EycFBVRkZSUkVGcVFXcE5VMFYzU0hkWlJGWlJVVVJFUW1oeVRUTk5kRmt5ZUhBS1dsYzFNRXhYVG1oUlJFVXpUbFJyTUUxcVZURlBWRmwzU0doalRrMXFWWGhOUkVGNVRWUmplRTlVVlRKWGFHTk9UWHBWZDA5VVRYZE5WR040VDFSVk1ncFhha0ZxVFZORmQwaDNXVVJXVVZGRVJFSm9jazB6VFhSWk1uaHdXbGMxTUV4WFRtaFJSRVV6VGxSck1FMXFWVEZQVkZsM1YxUkJWRUpuWTNGb2EycFBDbEJSU1VKQ1oyZHhhR3RxVDFCUlRVSkNkMDVEUVVGVVozUXhNRFZuVXpkNlVFNVJUMlkzV1drdlQxQlplalZZSzBsb1IwbFJZbEJUVkZKall6RkJRVklLTVVKWmJuaDFWa3hsTUVSSGQyOWFOVU55U0RBeGRraE1aRkJwZGt0eVoxWlROV1JHU0VjeGFWUkZWVzF2TUVsM1VVUkJUMEpuVGxaSVVUaENRV1k0UlFwQ1FVMURRWEZSZDBSM1dVUldVakJVUVZGSUwwSkJWWGRCZDBWQ0wzcEJaRUpuVGxaSVVUUkZSbWRSVlhST2VtdFpjek5LYlZrelEzSXdiemhsWm1aWUNuSXlLMUJ3YURSM1EyZFpTVXR2V2tsNmFqQkZRWGRKUkZOUlFYZFNaMGxvUVZCTFUyUTJRMHhOVHpSRFJreHlTV056VTJKSU1tRkpORmw1ZWs1MlRVY0tNblp0ZWpadlNEQkhiMnBNUVdsRlFXNVJTQ3RRU0dGNFZTdG9WVWRHZGtWcU0yTm5UMFl2VGt4a0sxbEJRMnQ1ZVVkWmFIQjNXR3hpZVRROUNpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwSwogICAgY2xpZW50LWtleS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJGUXlCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2sxSVkwTkJVVVZGU1VWV2N5OUhUbUl5WTNCM1psaEpiV2w2YVVNMEsxUkRSblI2T1dGS2RGQnplRVl5UTFsVU1GUmxVMUZ2UVc5SFEwTnhSMU5OTkRrS1FYZEZTRzlWVVVSUlowRkZUemcwUmpSd1lWWXllazlZUW5ZMlIxUnZNblZ2ZUhaaVpIVXlhVFZrY1hRM1YyOVJNV054Y2pKMU5YZHlPVmhDZWpGemRRcGxSMWROYjJWTlNrMDBZa2RETkN0SWVrSlNUbFZxWTJoVGVtaEJkMU5QUTJsM1BUMEtMUzB0TFMxRlRrUWdSVU1nVUZKSlZrRlVSU0JMUlZrdExTMHRMUW89Cg==",
		Resources: v1.ResourceList{
			v1.ResourceCPU:    *resource.NewQuantity(2, resource.DecimalSI),
			v1.ResourceMemory: *resource.NewQuantity(3*1024*1024*1024, resource.BinarySI),
			v1.ResourcePods:   *resource.NewQuantity(100, resource.DecimalSI),
			"nvidia.com/gpu":  *resource.NewQuantity(0, resource.DecimalSI),
		},
		Labels: map[string]string{
			"country":  "italy",
			"provider": "liqo",
			"city":     "turin",
			"hasGPU":   "false",
		},
		HasNat: false,
	},
}

type Cluster struct {
	Name       string            `json:"name"`
	Kubeconfig string            `json:"kubeconfig"`
	Resources  v1.ResourceList   `json:"resources"`
	Labels     map[string]string `json:"labels"`
	HasNat     bool              `json:"hasNat"`
}

func ReturnList() ([]Cluster, error) {
	// No existing Nodegroups
	if len(clusterList) == 0 {
		return nil, fmt.Errorf("no clusters found")
	} else {
		return clusterList, nil
	}
}

func UpdateList(name string, kubeconfig string, resources int) error {
	// Update the list of remote clusters
	if name == "" || kubeconfig == "" || resources <= 0 {
		return fmt.Errorf("invalid parameters for updating cluster list")
	}

	// Simulate updating the cluster map
	log.Printf("kubeconfig: %s, resources: %d", kubeconfig, resources)
	return nil
}
