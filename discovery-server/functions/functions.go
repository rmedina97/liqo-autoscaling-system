package util

import (
	"fmt"
	"log"

	v1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/api/resource"
)

var clusterList = []Cluster{
	{
		Name:       "remote",
		Kubeconfig: "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRtcEJkMDFxVFhwT1JGVjNTR2hqVGsxcVZYaE5SRUUxVFZSVmVVMXFTVEZYYUdOT1RYcFZlRTFFUVROTlZGVjVUV3BKTVFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUbXBCZDAxcVRYcE9SRlYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZTU0N0b1RuSkJOMUpaYVhodmR6azJiRlo1Y0hkWU4yWXdkekprTWxSWk5GUnJiRVJQZDBaUE4wTUtRVWRyZUZGMmRFdEhRVUYzVTJWM1lWUkZabGRKYWxaMGRtSkRaa1EwV1N0M05HdElialZoWTFwWlNXdHZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWV0paV1RkdVVtdzRWamd2UzNKTVVIUldUMjUwQ2xoQ2FVOXNSMFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5TVkZDYkZOMVRqUnNaR3hoWVRKblRFZDZXa050UnpCT09XUkdXVXN3SzBZS09WUk9NVTVxTlRNdmMwVkRTVkZFYUdocVNWRnBXRmhUTDBWV1JWTTVXbFF2Y0cxSE1FUkVkME51UmsxM1NWQmtkRVJNWlU1WmNqYzVaejA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMTkyLjE2OC4xMS4xMTQ6NjQ0MwogIG5hbWU6IGRlZmF1bHQKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGRlZmF1bHQKICAgIHVzZXI6IGRlZmF1bHQKICBuYW1lOiBkZWZhdWx0CmN1cnJlbnQtY29udGV4dDogZGVmYXVsdApraW5kOiBDb25maWcKcHJlZmVyZW5jZXM6IHt9CnVzZXJzOgotIG5hbWU6IGRlZmF1bHQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVUpyVkVORFFWUmxaMEYzU1VKQlowbEpaRWREWldaUFFWVklObGwzUTJkWlNVdHZXa2w2YWpCRlFYZEpkMGw2UldoTlFqaEhRVEZWUlVGM2Qxa0tZWHBPZWt4WFRuTmhWMVoxWkVNeGFsbFZRWGhPZWxsM1RVUkplazE2VVRGTlFqUllSRlJKTVUxVVFYZFBWRVV4VFdwSmVVNVdiMWhFVkVreVRWUkJkd3BQVkVVeFRXcEplVTVXYjNkTlJFVllUVUpWUjBFeFZVVkRhRTFQWXpOc2VtUkhWblJQYlRGb1l6TlNiR051VFhoR1ZFRlVRbWRPVmtKQlRWUkVTRTQxQ21NelVteGlWSEJvV2tjeGNHSnFRbHBOUWsxSFFubHhSMU5OTkRsQlowVkhRME54UjFOTk5EbEJkMFZJUVRCSlFVSk9MMmRSWm5GMmFFZ3hOWGs1U1hnS1YyNVNSVU0xY1RZMVFraDNOVXBTTTAxU01qYzFPWE52ZFhSUE9XTlVSMUZ1TVVsRE1tOU9OeTlJVG1waFRWRlJjV2x4VFRSWldqbFVSVVZVUVVjdmJ3cDVVa1ZZVEZvcmFsTkVRa2ROUVRSSFFURlZaRVIzUlVJdmQxRkZRWGRKUm05RVFWUkNaMDVXU0ZOVlJVUkVRVXRDWjJkeVFtZEZSa0pSWTBSQmFrRm1Da0puVGxaSVUwMUZSMFJCVjJkQ1UySlZhWGxPWjI5cU4yMXVaRlJDZFZoV01Vd3JiMUkyZFVsaFJFRkxRbWRuY1docmFrOVFVVkZFUVdkT1NVRkVRa1lLUVdsRlFUZ3dVa2RZUjJKMWQxZDJVRlZOWm5sUFkzQkhPRVZpUWxkaGJVY3pNWEpLVFhBMVEzZzFRWGhpVXpSRFNVSlNUMk5SYkZaek1qQndWWFV6S3dvNVFVSmhOV1JvY2xSTmFrNURXbWMxT1hWaFUweEVOelJrYlVKRENpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwS0xTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVUprZWtORFFWSXlaMEYzU1VKQlowbENRVVJCUzBKblozRm9hMnBQVUZGUlJFRnFRV3BOVTBWM1NIZFpSRlpSVVVSRVFtaHlUVE5OZEZreWVIQUtXbGMxTUV4WFRtaFJSRVV6VG1wQmQwMXFUWHBPUkZWM1NHaGpUazFxVlhoTlJFRTFUVlJWZVUxcVNURlhhR05PVFhwVmVFMUVRVE5OVkZWNVRXcEpNUXBYYWtGcVRWTkZkMGgzV1VSV1VWRkVSRUpvY2swelRYUlpNbmh3V2xjMU1FeFhUbWhSUkVVelRtcEJkMDFxVFhwT1JGVjNWMVJCVkVKblkzRm9hMnBQQ2xCUlNVSkNaMmR4YUd0cVQxQlJUVUpDZDA1RFFVRlNVRFF5WmxCc1NHODViVlZETVhSRk9GcGFVWGMyYVRSUWRUY3JaMmhWYTFaQ01reENNRVZIUm5VS2VEVnhhVXhrU2xjNVYzYzBOblJYU0hSRFExSlZkbEJqYUZoMFQzQTNXVmRhZW5wbmRGTm9UVmhaTDB0dk1FbDNVVVJCVDBKblRsWklVVGhDUVdZNFJRcENRVTFEUVhGUmQwUjNXVVJXVWpCVVFWRklMMEpCVlhkQmQwVkNMM3BCWkVKblRsWklVVFJGUm1kUlZXMHhTWE5xV1V0Skt6VndNMVYzWW13eFpGTXZDbkZGWlhKcFIyZDNRMmRaU1V0dldrbDZhakJGUVhkSlJGTkJRWGRTVVVsb1FVOXhOazQwZFhWSmNrWTVRVTFvTWt0SlNWWndhVXN5YldadU1WQXdNSG9LUjNCWVozUllWRFJGTTJFM1FXbENZMlkzZGpjMFMwSTNSMEZIWWs5cUt6aDFZVEJWVlhOMFFsZzFNako0WVdGMFNUWkJjWFZQWjFCSlFUMDlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCRlF5QlFVa2xXUVZSRklFdEZXUzB0TFMwdENrMUlZME5CVVVWRlNVMWthMmQ2TXl0NFNrWmxVRUkxWm5sdk1pdHFkVk5FVFVkNFJEWnlRbFVySzFwbFRHUllTbUpaY0UxdlFXOUhRME54UjFOTk5Ea0tRWGRGU0c5VlVVUlJaMEZGTXl0Q1FpdHhLMFZtV0c1TU1HcEdZV1JGVVV4dGNuSnJSV1pFYTJ4SVkzaElZblp1TW5scE5qQTNNWGhOV2tObVZXZE1ZUXBuTTNZNFl6Sk9iM2hDUTNGTGIzcG9hRzR4VFZGU1RVRmlLMnBLUlZKamRHNTNQVDBLTFMwdExTMUZUa1FnUlVNZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFvPQo=",
		Resources: v1.ResourceList{
			v1.ResourceCPU:    *resource.NewQuantity(5, resource.DecimalSI),
			v1.ResourceMemory: *resource.NewQuantity(4*1024*1024*1024, resource.BinarySI),
			v1.ResourcePods:   *resource.NewQuantity(100, resource.DecimalSI),
			"nvidia.com/gpu":  *resource.NewQuantity(1, resource.DecimalSI),
		},
		Labels: map[string]string{
			"country":  "france",
			"provider": "liqo",
			"city":     "paris",
			"hasGPU":   "true",
		},
		HasNat: false,
	},
	{
		Name:       "remotelow",
		Kubeconfig: "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKbFJFTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRtcEJkMDFxVFhwT1JGVjNTR2hqVGsxcVZYaE5SRUUxVFZSVmVVMXFTVEZYYUdOT1RYcFZlRTFFUVROTlZGVjVUV3BKTVFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUbXBCZDAxcVRYcE9SRlYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZVYVdkb01ERTFXRE5XVWt4YVFVVmpXVGN6VWpSa1Iyb3dUVVJWVVZNNVRXcEZRVk5SU1hOTEwyRUtWSGg1TTJnME1YRkNORWxUVVhGMFRWZ3JPVFJqUnpWS1VtRmxURkJ6YjI1Q1NHVkpMMHBqV1ZweEwzRnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVWx4T1hCSFdVTjVZV3RwY2xGUVZqZDNXRVZoQ2xNelFsSnZkRlYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5SUVhkU1owbG9RVWx6UTNCa2VuQmlkMGxITVhGV2RFSllOalJJWjFKVFp6TlBhbUp4U21NS1NHaHFXa2RLT1dsdmVVMWFRV2xGUVhNMFJrNWthRzFtTWtsME9HMDVhbXhGUnpCVVEwVXllWGRzYkdaM1ltRnVPWEZoV1VSa1pITnFZemc5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMTkyLjE2OC4xMS42OTo2NDQzCiAgbmFtZTogZGVmYXVsdApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogZGVmYXVsdAogICAgdXNlcjogZGVmYXVsdAogIG5hbWU6IGRlZmF1bHQKY3VycmVudC1jb250ZXh0OiBkZWZhdWx0CmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogZGVmYXVsdAogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSnJSRU5EUVZSbFowRjNTVUpCWjBsSllrZzJWa2xOZEhCSFoxVjNRMmRaU1V0dldrbDZhakJGUVhkSmQwbDZSV2hOUWpoSFFURlZSVUYzZDFrS1lYcE9la3hYVG5OaFYxWjFaRU14YWxsVlFYaE9lbGwzVFVSSmVrMTZVVEZOUWpSWVJGUkpNVTFVUVhkUFZFVXhUV3BKZVU1V2IxaEVWRWt5VFZSQmR3cFBWRVV4VFdwSmVVNVdiM2ROUkVWWVRVSlZSMEV4VlVWRGFFMVBZek5zZW1SSFZuUlBiVEZvWXpOU2JHTnVUWGhHVkVGVVFtZE9Wa0pCVFZSRVNFNDFDbU16VW14aVZIQm9Xa2N4Y0dKcVFscE5RazFIUW5seFIxTk5ORGxCWjBWSFEwTnhSMU5OTkRsQmQwVklRVEJKUVVKQmNrUTJZMUpsU25WRWFXeDVWSFVLUmpKNE16QnFSRmx4YUZaR05uSkhZbm94VWtkS1pFZGpNVVZXZHpsWGVuVXdWbEp4TUhsbFEwaHdWR2swWTFsdk5tc3lVRWQwUmtWaVRURnBNMWRsVGdvM1MzQndLMHBQYWxORVFrZE5RVFJIUVRGVlpFUjNSVUl2ZDFGRlFYZEpSbTlFUVZSQ1owNVdTRk5WUlVSRVFVdENaMmR5UW1kRlJrSlJZMFJCYWtGbUNrSm5UbFpJVTAxRlIwUkJWMmRDVTI5bGNqVkZjWEZHTlZkVGRYY3llbmd3WlZsQlQyaHhPRkJKUkVGTFFtZG5jV2hyYWs5UVVWRkVRV2RPU0VGRVFrVUtRV2xDYjJOblNGbEZUM05IU1U1SloxcHVNR1ZUVUVwWFFXaHZUMk5zZDJaaVpFeDBhM2xWY1ZkMGFVRXlRVWxuV21nMlNqTklUMUZIWjFOREszUTJWZ3BIZDJsMlkzSm5SVEZFUm1wUlRtNTBWbkIxY210Qk1UZG1ZbU05Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSmtla05EUVZJeVowRjNTVUpCWjBsQ1FVUkJTMEpuWjNGb2EycFBVRkZSUkVGcVFXcE5VMFYzU0hkWlJGWlJVVVJFUW1oeVRUTk5kRmt5ZUhBS1dsYzFNRXhYVG1oUlJFVXpUbXBCZDAxcVRYcE9SRlYzU0doalRrMXFWWGhOUkVFMVRWUlZlVTFxU1RGWGFHTk9UWHBWZUUxRVFUTk5WRlY1VFdwSk1RcFhha0ZxVFZORmQwaDNXVVJXVVZGRVJFSm9jazB6VFhSWk1uaHdXbGMxTUV4WFRtaFJSRVV6VG1wQmQwMXFUWHBPUkZWM1YxUkJWRUpuWTNGb2EycFBDbEJSU1VKQ1oyZHhhR3RxVDFCUlRVSkNkMDVEUVVGVGNsVTFURFZXVWt0eVRUTlVWR0U0SzFBM1NVWnRhRmd2ZGpKdk56ZDJXblk0UjFKdFFWZFlUMUlLVW5VM1VVMTVkVTF2ZWtWcFpYQndUakkxYjI5V1ltbFphVGxOWkhKek1tSnRjVWN2WlZab2NXWjRlRE52TUVsM1VVUkJUMEpuVGxaSVVUaENRV1k0UlFwQ1FVMURRWEZSZDBSM1dVUldVakJVUVZGSUwwSkJWWGRCZDBWQ0wzcEJaRUpuVGxaSVVUUkZSbWRSVlhGSWNTdFNTM0ZvWlZacmNuTk9jemhrU0cxQkNrUnZZWFpFZVVGM1EyZFpTVXR2V2tsNmFqQkZRWGRKUkZOQlFYZFNVVWxvUVV3NVQzb3hiM016V0RoMFNubDNhSFJhYkVwVVZ6TmlhRmxTUkRWbFFtVUtTMUJrTlZOVVFXY3JieloyUVdsQlpURmlXWHBOUlZwdloyTlJPWE0zV1daS2QyaE1ZM2w2ZDNNelMyZE5TbEZ2Vnpoa00zRm1NMjE0UVQwOUNpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwSwogICAgY2xpZW50LWtleS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJGUXlCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2sxSVkwTkJVVVZGU1ZCc1lVbHdhRzlKV1hSR2FFUkJTR2R1T0haTWNuaGxkbGxQZFRsblpEaHNabk56TDJaMVYwMU1iVXR2UVc5SFEwTnhSMU5OTkRrS1FYZEZTRzlWVVVSUlowRkZRM05RY0hoR05HMDBUMHRZU2s4MFdHSklabE5OVG1seFJsVlljWE5hZGxCV1JWbHNNRnA2VlZKWVJERmlUemRTVmtkeVZBcEtORWxsYkU5TWFIaHBhbkZVV1RoaE1GVlNjM3BYVEdSYU5ETnpjVzF1Tkd0M1BUMEtMUzB0TFMxRlRrUWdSVU1nVUZKSlZrRlVSU0JMUlZrdExTMHRMUW89Cg==",
		Resources: v1.ResourceList{
			v1.ResourceCPU:    *resource.NewQuantity(2, resource.DecimalSI),
			v1.ResourceMemory: *resource.NewQuantity(3*1024*1024*1024, resource.BinarySI),
			v1.ResourcePods:   *resource.NewQuantity(100, resource.DecimalSI),
			"nvidia.com/gpu":  *resource.NewQuantity(0, resource.DecimalSI),
		},
		Labels: map[string]string{
			"country":  "italy",
			"provider": "liqo",
			"city":     "turin",
			"hasGPU":   "false",
		},
		HasNat: false,
	},
}

type Cluster struct {
	Name       string            `json:"name"`
	Kubeconfig string            `json:"kubeconfig"`
	Resources  v1.ResourceList   `json:"resources"`
	Labels     map[string]string `json:"labels"`
	HasNat     bool              `json:"hasNat"`
}

func ReturnList() ([]Cluster, error) {
	// No existing Nodegroups
	if len(clusterList) == 0 {
		return nil, fmt.Errorf("no clusters found")
	} else {
		return clusterList, nil
	}
}

func UpdateList(name string, kubeconfig string, resources int) error {
	// Update the list of remote clusters
	if name == "" || kubeconfig == "" || resources <= 0 {
		return fmt.Errorf("invalid parameters for updating cluster list")
	}

	// Simulate updating the cluster map
	log.Printf("kubeconfig: %s, resources: %d", kubeconfig, resources)
	return nil
}
